{"ast":null,"code":"var _jsxFileName = \"/home/dev/Desktop/MyTraining/React-Jonas/ultimate-react-course-main/05-travel-list/travel-list/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Logo from \"./Logo\";\nimport Form from \"./Form\";\nimport PackingList from \"./PackingList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [items, setItems] = useState([]);\n  const handleAddItem = item => {\n    /* In React, we never want to mutate state directly.\n     Instead, we want to create a new copy of the state,\n     and then update the state with the new copy.\n    setItems((items) => [...items, item]); */\n    setItems(items => [...items, item]);\n  };\n  const handleRemoveItem = id => {\n    setItems(items => items.filter(item => item.id !== id));\n  };\n  const handleUpdateItem = id => {\n    setItems(items => {\n      const updatedItems = items.map(item => {\n        if (item.id === id) {\n          return {\n            ...item,\n            packed: !item.packed\n          };\n        }\n        return item;\n      });\n      return updatedItems;\n    });\n  };\n  const handleClearList = () => {\n    const confirmed = window.confirm(\"Are you sure you want to clear the list?\");\n    if (confirmed) {\n      setItems([]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app\",\n    children: [/*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onAddItems: handleAddItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PackingList, {\n      items: items,\n      onRemoveItem: handleRemoveItem,\n      onUpdateItem: handleUpdateItem,\n      onClearList: handleClearList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stats, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"6WAym07vHedVzpAy8bFDJKqtv8I=\");\n_c = App;\nexport default App;\nconst Item = _ref => {\n  let {\n    item,\n    onRemoveItem,\n    onUpdateItem\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      checked: item.packed,\n      onChange: () => {\n        onUpdateItem(item.id);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      style: {\n        textDecoration: item.packed ? \"line-through\" : \"none\"\n      },\n      children: [item.quantity, \"x \", item.description]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"remove\",\n      onClick: () => {\n        onRemoveItem(item.id);\n      },\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        role: \"img\",\n        \"aria-label\": \"Remove this item from the list\",\n        children: \"\\u274C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_c2 = Item;\nconst Stats = _ref2 => {\n  let {\n    items\n  } = _ref2;\n  if (!items.length) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"stats\",\n      children: \"\\\"You haven't packed anything yet! \\uD83D\\uDE31\\\"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 12\n    }, this);\n  }\n  const numItems = items.length;\n  const numPackedItems = items.filter(item => item.packed).length;\n  const percentage = Math.round(numPackedItems / numItems * 100);\n  let message;\n  if (percentage === 100) {\n    message = \"You are ready to go! ü•≥\";\n  } else if (percentage > 50) {\n    message = \"You are almost ready! üòé\";\n  } else if (percentage > 0) {\n    message = \"You are getting there! üòÖ\";\n  }\n  return /*#__PURE__*/_jsxDEV(\"footer\", {\n    className: \"stats\",\n    children: /*#__PURE__*/_jsxDEV(\"em\", {\n      children: [message, \" \\uD83D\\uDCBC You have\", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\" \", numItems, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), \"items on your list, and you already packed\", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\" \", numPackedItems, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), \"(\", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: [\" \", percentage, \"% \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 35\n      }, this), \") items.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Stats;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Item\");\n$RefreshReg$(_c3, \"Stats\");","map":{"version":3,"names":["React","useState","Logo","Form","PackingList","jsxDEV","_jsxDEV","App","_s","items","setItems","handleAddItem","item","handleRemoveItem","id","filter","handleUpdateItem","updatedItems","map","packed","handleClearList","confirmed","window","confirm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddItems","onRemoveItem","onUpdateItem","onClearList","Stats","_c","Item","_ref","type","checked","onChange","style","textDecoration","quantity","description","onClick","role","_c2","_ref2","length","numItems","numPackedItems","percentage","Math","round","message","_c3","$RefreshReg$"],"sources":["/home/dev/Desktop/MyTraining/React-Jonas/ultimate-react-course-main/05-travel-list/travel-list/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport Logo from \"./Logo\";\nimport Form from \"./Form\";\nimport PackingList from \"./PackingList\";\nfunction App() {\n  const [items, setItems] = useState([]);\n  const handleAddItem = (item) => {\n    /* In React, we never want to mutate state directly.\n     Instead, we want to create a new copy of the state,\n     and then update the state with the new copy.\n    setItems((items) => [...items, item]); */\n    setItems((items) => [...items, item]);\n  };\n\n  const handleRemoveItem = (id) => {\n    setItems((items) => items.filter((item) => item.id !== id));\n  };\n\n  const handleUpdateItem = (id) => {\n    setItems((items) => {\n      const updatedItems = items.map((item) => {\n        if (item.id === id) {\n          return {\n            ...item,\n            packed: !item.packed,\n          };\n        }\n        return item;\n      });\n      return updatedItems;\n    });\n  };\n\n  const handleClearList = () => {\n    const confirmed = window.confirm(\n      \"Are you sure you want to clear the list?\"\n    );\n    if (confirmed) {\n      setItems([]);\n    }\n  };\n\n  return (\n    <div className=\"app\">\n      <Logo />\n      <Form onAddItems={handleAddItem} />\n      <PackingList\n        items={items}\n        onRemoveItem={handleRemoveItem}\n        onUpdateItem={handleUpdateItem}\n        onClearList={handleClearList}\n      />\n      <Stats items={items} />\n    </div>\n  );\n}\n\nexport default App;\n\nconst Item = ({ item, onRemoveItem, onUpdateItem }) => {\n  return (\n    <li>\n      <input\n        type=\"checkbox\"\n        checked={item.packed}\n        onChange={() => {\n          onUpdateItem(item.id);\n        }}\n      />\n      <span\n        style={{\n          textDecoration: item.packed ? \"line-through\" : \"none\",\n        }}\n      >\n        {item.quantity}x {item.description}\n      </span>\n      <button\n        className=\"remove\"\n        onClick={() => {\n          onRemoveItem(item.id);\n        }}\n      >\n        <span role=\"img\" aria-label=\"Remove this item from the list\">\n          ‚ùå\n        </span>\n      </button>\n    </li>\n  );\n};\n\nconst Stats = ({ items }) => {\n  if (!items.length) {\n    return <p className=\"stats\">\"You haven't packed anything yet! üò±\"</p>;\n  }\n\n  const numItems = items.length;\n  const numPackedItems = items.filter((item) => item.packed).length;\n  const percentage = Math.round((numPackedItems / numItems) * 100);\n\n  let message;\n  if (percentage === 100) {\n    message = \"You are ready to go! ü•≥\";\n  } else if (percentage > 50) {\n    message = \"You are almost ready! üòé\";\n  } else if (percentage > 0) {\n    message = \"You are getting there! üòÖ\";\n  }\n\n  return (\n    <footer className=\"stats\">\n      <em>\n        {message} üíº You have\n        <b> {numItems} </b>\n        items on your list, and you already packed\n        <b> {numPackedItems} </b>(<b> {percentage}% </b>) items.\n      </em>\n    </footer>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}